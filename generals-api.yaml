openapi: 3.1.0
info:
  title: Generals.io API
  version: 1.0.0
servers:
  - url: https://generals.io/api
paths:
  /maps/lists/{list}:
    get:
      operationId: getMapList
      summary: Get map list by category
      parameters:
        - in: path
          name: list
          required: true
          schema:
            type: string
            enum: [hot, top, new, best]
      responses:
        '200':
          description: List of maps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Map'

  /maps/search:
    get:
      operationId: searchMaps
      summary: Search for maps
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of maps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Map'

  /replays:
    get:
      operationId: getReplays
      summary: Get recent replays
      parameters:
        - in: query
          name: count
          required: true
          schema:
            type: integer
        - in: query
          name: offset
          required: true
          schema:
            type: integer
        - in: query
          name: l
          required: false
          schema:
            type: string
            enum: [duel, ffa, 2v2]
      responses:
        '200':
          description: List of replays
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Replay'

  /replaysForUsername:
    get:
      operationId: getReplaysForUser
      summary: Get replays for a user
      parameters:
        - in: query
          name: u
          required: true
          schema:
            type: string
        - in: query
          name: count
          required: true
          schema:
            type: integer
        - in: query
          name: offset
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of user replays
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Replay'

  /starsAndRanks:
    get:
      operationId: getStarsAndRanks
      summary: Get stars and ranks for user
      parameters:
        - in: query
          name: u
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rank and star data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StarsAndRanks'

components:
  schemas:
    Map:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        width:
          type: integer
        height:
          type: integer
        map:
          type: string
        username:
          type: string
        server_name:
          type: string
        created_at:
          type: string
          format: date-time
        upvotes:
          type: integer
        score:
          type: number

    Replay:
      type: object
      properties:
        type:
          type: string
        ladder_id:
          type: string
        id:
          type: string
        started:
          type: integer
        turns:
          type: integer
        ranking:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              stars:
                type: integer
              currentName:
                type: string

    StarsAndRanks:
      type: object
      properties:
        ranks:
          type: object
          additionalProperties:
            type: integer
        stars:
          type: object
          additionalProperties:
            type: string
